apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "me.tatocaster.letinterview"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        release {
            // Load keystore
            def keystorePropertiesFile = rootProject.file("keystore.properties")
            def keystoreProperties = new Properties()
            keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

            storeFile file(keystoreProperties["App.signing"])
            storePassword keystoreProperties["App.storePassword"]
            keyAlias keystoreProperties["App.keyAlias"]
            keyPassword keystoreProperties["App.keyPassword"]
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            shrinkResources true
        }
    }

    buildTypes.each {
        it.buildConfigField "String", "MOVIEDB_PUBLIC", getSecureKey("MOVIEDB_PUBLIC_KEY")
    }

    /*configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:2.0.1'
    }*/
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:27.1.0'
    implementation 'com.android.support:cardview-v7:27.1.0'
    implementation 'com.android.support:recyclerview-v7:27.1.0'
    implementation 'com.android.support:design:27.1.0'
    implementation 'com.android.support:appcompat-v7:27.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    // 3rd part libs
    implementation 'com.jakewharton.timber:timber:4.6.1'
    implementation 'com.tapadoo.android:alerter:2.0.3'
    api 'io.reactivex.rxjava2:rxjava:2.1.7'
    api 'io.reactivex.rxjava2:rxandroid:2.0.1'
    api 'com.squareup.okhttp3:okhttp:3.9.1'
    api 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    api 'com.squareup.retrofit2:retrofit:2.3.0'
    api 'com.squareup.retrofit2:converter-gson:2.3.0'
    api 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    api 'com.google.dagger:dagger:2.15'

    implementation 'com.github.bumptech.glide:glide:4.6.1'
    implementation 'jp.wasabeef:recyclerview-animators:2.3.0'
    implementation 'joda-time:joda-time:2.9.9'

    kapt 'com.github.bumptech.glide:compiler:4.6.1'
    kapt 'com.google.dagger:dagger-compiler:2.15'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.+'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

static def getSecureKey(String property) {
    Properties properties = new Properties()
    properties.load(new FileInputStream("secrets.properties"))
    return "\"" + properties.getProperty(property) + "\""
}